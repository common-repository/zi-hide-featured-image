{"version":3,"sources":["zi-hide-featured-image.js"],"names":["el","wp","element","createElement","withState","compose","withSelect","data","withDispatch","hooks","addFilter","wrapPostFeaturedImage","OriginalComponent","props","Fragment","composedCheckBox","CheckBoxCustom","meta","updateDisableFeaturedImage","console","log","components","CheckboxControl","label","help","checked","editedMeta","disable_featured_image","onChange","value","setState","isChecked","React","Component","select","currentMeta","getCurrentPostAttribute","getEditedPostAttribute","dispatch","editPost"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,EAAE,GAAGC,EAAE,CAACC,OAAH,CAAWC,aAAtB;AACA,IAAMC,SAAS,GAAGH,EAAE,CAACI,OAAH,CAAWD,SAA7B;AACA,IAAME,UAAU,GAAGL,EAAE,CAACM,IAAH,CAAQD,UAA3B;AACA,IAAME,YAAY,GAAGP,EAAE,CAACM,IAAH,CAAQC,YAA7B;AAEAP,EAAE,CAACQ,KAAH,CAASC,SAAT,CACI,0BADJ,EAEI,6CAFJ,EAGIC,qBAHJ;;AAMA,SAASA,qBAAT,CAAgCC,iBAAhC,EAAoD;AAEhD,SAAO,UAAUC,KAAV,EAAkB;AACrB,WACIb,EAAE,CACEC,EAAE,CAACC,OAAH,CAAWY,QADb,EAEE,EAFF,EAGEd,EAAE,CACEY,iBADF,EAEEC,KAFF,CAHJ,EAOEb,EAAE,CACEe,gBADF,CAPJ,CADN;AAaH,GAdD;AAeH;;IAIKC;;;;;;;;;;;;;6BAEO;AAAA;;AAAA,wBAID,KAAKH,KAJJ;AAAA,UAEDI,IAFC,eAEDA,IAFC;AAAA,UAGDC,0BAHC,eAGDA,0BAHC;AAMbC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEQ,aACIjB,EAAE,CACEC,EAAE,CAACoB,UAAH,CAAcC,eADhB,EAEE;AACIC,QAAAA,KAAK,EAAE,qBADX;AAEIC,QAAAA,IAAI,EAAE,sEAFV;AAGIC,QAAAA,OAAO,EAAER,IAAI,CAACS,UAAL,CAAgBC,sBAH7B;AAIIC,QAAAA,QAAQ,EACJ,kBAAEC,KAAF,EAAa;AACT,UAAA,KAAI,CAACC,QAAL,CAAe;AAAEC,YAAAA,SAAS,EAAEF;AAAb,WAAf;;AACAX,UAAAA,0BAA0B,CAAEW,KAAF,EAASZ,IAAT,CAA1B;AACH;AART,OAFF,CADN;AAeH;;;;EAzBwBe,KAAK,CAACC;;AA4BnC,IAAMlB,gBAAgB,GAAGd,EAAE,CAACI,OAAH,CAAWA,OAAX,CAAoB,CACzCD,SAAS,CAAE,UAAEyB,KAAF,EAAa;AAAEE,EAAAA,SAAS,EAAEF,KAAK;AAAE,CAAnC,CADgC,EAEzCvB,UAAU,CAAE,UAAE4B,MAAF,EAAc;AACtB,MAAMC,WAAW,GAAGD,MAAM,CAAE,aAAF,CAAN,CAAwBE,uBAAxB,CAAiD,MAAjD,CAApB;AACN,MAAMV,UAAU,GAAGQ,MAAM,CAAE,aAAF,CAAN,CAAwBG,sBAAxB,CAAgD,MAAhD,CAAnB;AAEM,SAAO;AACHpB,IAAAA,IAAI,EAAE;AAAEkB,MAAAA,WAAW,EAAXA,WAAF;AAAeT,MAAAA,UAAU,EAAVA;AAAf;AADH,GAAP;AAGH,CAPS,CAF+B,EAUzClB,YAAY,CAAE,UAAE8B,QAAF;AAAA,SAAkB;AAC5BpB,IAAAA,0BAD4B,sCACAW,KADA,EACOZ,IADP,EACc;AACtCA,MAAAA,IAAI,GAAG;AACHA,QAAAA,IAAI,EAAJA,IADG;AAEHU,QAAAA,sBAAsB,EAAEE;AAFrB,OAAP;AAIAS,MAAAA,QAAQ,CAAE,aAAF,CAAR,CAA0BC,QAA1B,CAAoC;AAAEtB,QAAAA,IAAI,EAAJA;AAAF,OAApC;AACH;AAP2B,GAAlB;AAAA,CAAF,CAV6B,CAApB,EAmBpBD,cAnBoB,CAAzB","file":"zi-hide-featured-image.js","sourceRoot":"..\\assets\\js","sourcesContent":["\"use strict\"\n\nconst el = wp.element.createElement;\nconst withState = wp.compose.withState;\nconst withSelect = wp.data.withSelect;\nconst withDispatch = wp.data.withDispatch;\n\nwp.hooks.addFilter(\n    'editor.PostFeaturedImage',\n    'extend-block/disable-featured-image-control',\n    wrapPostFeaturedImage\n);\n\nfunction wrapPostFeaturedImage( OriginalComponent ) {\n\n    return function( props ) {\n        return (\n            el(\n                wp.element.Fragment,\n                {},\n                el(\n                    OriginalComponent,\n                    props\n                ),\n                el(\n                    composedCheckBox\n                )\n            )\n        );\n    }\n}\n\n\n\nclass CheckBoxCustom extends React.Component {\n\n    render() {\n        const {\n            meta,\n            updateDisableFeaturedImage,\n        } = this.props;\n\nconsole.log(meta);\n\n        return (\n            el(\n                wp.components.CheckboxControl,\n                {\n                    label: \"Hide featured image\",\n                    help: \"If checked, the featured image will not show up on single post page.\",\n                    checked: meta.editedMeta.disable_featured_image,\n                    onChange:\n                        ( value ) => {\n                            this.setState( { isChecked: value } );\n                            updateDisableFeaturedImage( value, meta );\n                        }\n                }\n            )\n        )\n    }\n}\n\nconst composedCheckBox = wp.compose.compose( [\n    withState( ( value ) => { isChecked: value } ),\n    withSelect( ( select ) => {\n        const currentMeta = select( 'core/editor' ).getCurrentPostAttribute( 'meta' );\n\t\tconst editedMeta = select( 'core/editor' ).getEditedPostAttribute( 'meta' );\n\t\t\n        return {\n            meta: { currentMeta, editedMeta },\n        };\n    } ),\n    withDispatch( ( dispatch ) => ( {\n        updateDisableFeaturedImage( value, meta ) {\n            meta = {\n                meta,\n                disable_featured_image: value,\n            };\n            dispatch( 'core/editor' ).editPost( { meta } );\n        },\n    } ) ),\n] )( CheckBoxCustom );\n"]}